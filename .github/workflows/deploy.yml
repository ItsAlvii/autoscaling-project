name: Build, Push, and Deploy via AutoScaling

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4️⃣ Build and push Docker image
      - name: Build and push Docker image
        env:
          IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/project-autoscale
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "Building Docker image: $IMAGE_NAME:$IMAGE_TAG"
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG
          docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest
          echo "DEPLOY_IMAGE_TAG=$IMAGE_TAG" > deploy_env.sh

      # 5️⃣ Configure AWS credentials (CodeDeploy + Auto Scaling)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 6️⃣ Trigger CodeDeploy deployment
      - name: Trigger CodeDeploy deployment
        run: |
          echo "Triggering CodeDeploy deployment..."
          aws deploy create-deployment \
            --application-name autoscale-app \
            --deployment-group-name project-autoscale-dg-new \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}

      # 7️⃣ Trigger Auto Scaling Group instance refresh
      - name: Trigger Auto Scaling Group instance refresh
        run: |
          ASG_NAME="project-autoscale-asg"
          echo "Checking for active instance refresh on ASG: $ASG_NAME..."
          REFRESH_STATUS=$(aws autoscaling describe-instance-refreshes \
            --auto-scaling-group-name $ASG_NAME \
            --query 'InstanceRefreshes[0].Status' \
            --output text)

          if [ "$REFRESH_STATUS" = "InProgress" ]; then
            echo "⚠️ Instance refresh already in progress — skipping."
          else
            echo "Starting new instance refresh..."
            aws autoscaling start-instance-refresh \
              --auto-scaling-group-name $ASG_NAME \
              --strategy Rolling \
              --preferences '{"MinHealthyPercentage": 100, "InstanceWarmup": 300}'
          fi

      # 8️⃣ Log rollout initiation
      - name: Log rollout initiation
        run: echo "✅ Deployment triggered — new instances will pull the latest Docker image on startup."

