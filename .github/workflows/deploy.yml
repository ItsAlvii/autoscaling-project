name: Build, Push, and Deploy via SSM

on:
  push:
    branches:
      - main

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/project-autoscale
        run: |
          docker build --no-cache -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

  update-ec2:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Pull new Docker image and restart containers on instances
        env:
          IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/project-autoscale:latest
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=tag:Name,Values=project-autoscale" \
            --comment "Pull latest Docker image and restart app container" \
            --parameters '{
              "commands": [
                "sudo docker ps -q --filter name=project-autoscale | xargs -r sudo docker rm -f",
                "sudo docker images -q '"$IMAGE_NAME"' | xargs -r sudo docker rmi -f",
                "sudo docker pull '"$IMAGE_NAME"'",
                "sudo docker run -d --name project-autoscale -p 8080:8080 --restart=always '"$IMAGE_NAME"'"
              ]
            }' \
            --timeout-seconds 600 \
            --max-concurrency "100%" \
            --max-errors "0"

